{
  //管理rig依赖库
  //dependencies' key: 你的仓库名称
  //source: 必须是你仓库的git ssh url.
  //version: 需要安装的版本号，对应git's tag，需要符合semver命名规范。
  dependencies: {
    'rig-test-1': {
      source: "git@github.com:FlashHand/rig-test-1.git",
      version: "1.0.1"
    }
  },
  //cicd配置，基于文件目录的设计方式
  cicd: {
    //表明构建出的内容所在的目录。
    build_root_path: 'dist',
    //tree_schema是构建出来的内容的路径前缀模式。
    //未使用{}括住的目录名，是静态的目录，在endpoints中，该位置的目录名必须和tree_schema中对应位置保持一致。
    //如demo中，endpoints开头必须是demo.
    //{}的作用，使用了{}的目录层级，目录名是可以动态变化的。
    //endpoints中key的名字在目录名可变的层级可以有多个目录，如：'demo/test','demo/prod'.
    tree_schema: 'demo/{env}',
    //publish支持将网页部署到server上。
    //限制：
    //1. 只支持部署到阿里云OSS.
    //2. 只支持部署到一个bucket,一个bucket支持N个网站的部署。
    //3. 必须配合CDN URI REWRITE使用。
    //

    publish: {
      target: 'alicloud',
      type: 'alicloud',
      bucket: 'your alicloud bucket name',
      region: 'your alicloud region',
      access_key: '${ak}',
      access_secret: '${as}',
      bucket_root_path: '/',
      web_entry_path: '/'
    },
    endpoints: {
      'demo/test': {
        build: 'cross-env PUBLIC_PATH=$public_path npx vue-cli-service build --mode rig',
        defines: {
          NGINX_REPLACE_B: 'http://',
          NGINX_REPLACE_A: '替换了',
          RIG_REPLACE_PUBLIC: '$public_path',
        },
        domain: 'cdn.rys.com',
      },
      'demo/prod': {
        vue_env: 'oem2',
        defines: {
          NGINX_REPLACE_B: 'http://',
          NGINX_REPLACE_A: '替换了',
        },
        domain: 'cdn.rys.com'
      },
    },
    groups: [
      {
        name: '%group1',
        level: 'oem',
        includes: [
          'rys',
          'zhs',
        ],
      },
      {
        name: '%group1',
        level: 'oem',
        includes: [
          'zhs',
          'cy',
        ],
      }
    ],
  },
  vue_env: {
    __default__: {

    },

  }
}
